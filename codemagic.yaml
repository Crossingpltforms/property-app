# Check out https://docs.codemagic.io/getting-started/building-a-react-native-app/ for more information
# Please review and update values in curly braces

workflows:
    speedhome-app-workflow:
        name: Application Workflow
        environment:
            vars:
                XCODE_WORKSPACE: "SpeedHome.xcworkspace"
                XCODE_SCHEME: "SpeedHome"
                CM_CERTIFICATE: Encrypted()
                CM_PROVISIONING_PROFILE: Encrypted()
            node: latest
        triggering:
            events:
                # - push
                - pull_request
            branch_patterns: # Include or exclude watched branches
                - pattern: 'release-3.7.1'
                  include: true
                  source: false
            #     - pattern: 3.7.1-codemagic-test
            #       include: false  
            #       source: false
            #     - pattern: release-3.7.1
            #       included: true
            #       source: true
            cancel_previous_builds: false # Set to `true` to automatically cancel outdated webhook builds else set false
        scripts:
            - yarn
            - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - |
                # build Android
                cd android
                gradle wrapper
                ./gradlew clean
                ./gradlew app:assembleRelease 
            - keychain initialize
            - |
                # set up provisioning profiles
                PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
                mkdir -p "$PROFILES_HOME"
                PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
                echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
                echo "Saved provisioning profile $PROFILE_PATH"        
            - |
                # set up signing certificates
                echo $CM_CERTIFICATE | base64 --decode > /tmp/SH_DIST.p12
                keychain add-certificates --certificate /tmp/SH_DIST.p12
            - |
                # Increment build number
                cd ios && agvtool new-version -all $(($BUILD_NUMBER +300))   
            - xcode-project use-profiles
            - cd ios && rm -rf Podfile.lock && pod install
            - xcode-project build-ipa --workspace "$FCI_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        artifacts:
            - android/app/build/outputs/**/*.apk
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
            app_store_connect:
                apple_id: priyanka.mindcrew@gmail.com
                password: Encrypted(Z0FBQUFBQmY4d1NSSllqVkpyYl9ubG5OSXNMemNKSjItUE5vOFZuWGpGREItdjB2SUxQRmx1YzJjWm5ZQ0Q0WUJWcHF4Vl9ncXhkMkgyODBCbWRzSlhNR2tnNmcyN1JyUXc9PQ==)
            email:
                recipients:
                    - ranktrushal15@gmail.com
                    - priyanka.mindcrew@gmail.com
                    - parmarnikhil07@gmail.com
                    - kardakapil@gmail.com
                    - sumeetjaryal3254@gmail.com
                    - manishadhikari777@gmail.com
                    - shahbazqa1990@gmail.com
                    - Bashim.mahir@speedrent.com